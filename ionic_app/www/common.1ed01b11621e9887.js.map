{"version":3,"file":"common.1ed01b11621e9887.js","mappings":"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","names":["GestureDelegate","constructor","ctrl","id","name","priority","disableScroll","this","canStart","start","capture","captured","release","enableScroll","destroy","undefined","BlockerDelegate","disable","block","gesture","disableGesture","unblock","enableGesture","BACKDROP_NO_SCROLL","GESTURE_CONTROLLER","GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","_a","newID","createBlocker","opts","gestureName","set","delete","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","get","add","size","body","classList","remove","isDisabled","isCaptured","isScrollDisabled","disabled","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","__zone_symbol__addEventListener","node","_sPassive","Object","defineProperty","getDocument","Document","ownerDocument","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","direction","gesturePriority","maxAngle","threshold","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","type","startX","startY","startTime","currentX","currentY","velocityX","velocityY","deltaX","deltaY","currentTime","data","pan","createPanRecognizer","thresh","radians","PI","isDirX","maxCosine","cos","dirty","isPan","x","y","detect","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","fireOnMove","tryToCapturePan","then","fireOnStart","blurActiveElement","activeElement","blur","reset","pointerUp","ev","tmpHasCaptured","tmpHasFiredStart","calcGestureData","pointerEvents","createPointerEvents","pointerDown","pointerMove","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","Date","now","target","handleTouchEnd","handleMouseDown","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","timeStamp","updateDetail","requestAnimationFrame","abortGesture","prevX","prevY","prevT","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/components/gesture-controller.js","./node_modules/@ionic/core/components/index3.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n  createGesture(config) {\n    var _a;\n    return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n    const requestedStart = this.requestedStart;\n    let maxPriority = -10000;\n    requestedStart.forEach((value) => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n      document.dispatchEvent(event);\n      return true;\n    }\n    requestedStart.delete(id);\n    return false;\n  }\n  release(id) {\n    this.requestedStart.delete(id);\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n    set.add(id);\n  }\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n    return true;\n  }\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n    return false;\n  }\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n}\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.canStart(this.name);\n  }\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n    return captured;\n  }\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n}\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { GESTURE_CONTROLLER as G };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el)\n    ? {\n      capture: !!opts.capture,\n      passive: !!opts.passive,\n    }\n    : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        },\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy,\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    },\n  };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined,\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll,\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (!gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive,\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    },\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = (detail.currentTime = now(ev));\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"],"x_google_ignoreList":[0,1]}